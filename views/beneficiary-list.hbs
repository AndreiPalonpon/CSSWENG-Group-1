<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LPPWDFI | Beneficiaries List</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="/css/program-list-style.css">
</head>

<body>
    <div id="wrapper">
        <div class="overlay dark_bg"></div>
        <!-- Modal Background -->

         <!-- Sidebar -->
        <nav class="navbar navbar-inverse fixed-top" id="sidebar-wrapper" role="navigation">
            <ul class="nav sidebar-nav">
                <div class="sidebar-header">
                    <div class="sidebar-brand">
                        <a href="#">Admin</a>
                        <hr class="navbar-solid">
                    </div>
                </div>
                <li><a href="/">Dashboard</a></li>
                <li><a href="/programs">Programs</a></li>
                <li><a href="/people">People</a></li>
                <li><a href="/benefactors">Benefactor</a></li>
                <li><a href="/benefits">Benefits</a></li>
                <li><a href="/settings">Settings</a></li>
                <li class="logout-link">
                    <form action="/logout" method="POST">
                        <button type="submit" class="btn btn-link logout-btn">
                            <i class="bi bi-box-arrow-right"></i> 
                            Logout
                        </button>
                    </form>
                </li>
            </ul>
        </nav>
        <!-- /#sidebar-wrapper -->

        <!-- HEADER -->
        <div class="bg-half-gradient">
            <header class="bg-gradient">
                <div class="container d-flex align-items-center">
                    <div class="menu-icon mr-3" id="menu-toggle">&#9776;</div>
                    <a href="../views/dashboard.html">
                        <img src="../images/LPPWDFI-Logo.png" alt="Logo" class="logo mr-3">
                    </a>
                    <div>
                        <h1 class="org-name">Beneficiary</h1>
                    </div>
                </div>

                <div class="addProgramBtn">
                    <button>Create</button>
                </div>
            </header>
        </div>

        <!--MODAL FORM-->
        <div class="popup">
            <header>
                <h2 class="modalTitle">Fill the Form</h2>
                <span class="closeBtn">&times;</span>
            </header>
            <form id="beneficiaryForm" action="/beneficiaries/create" method="POST">
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="personRegistered">Person Registered</label>
                        <select class="form-control" id="personRegistered" name="personRegistered" required>
                            <option value="" selected disabled>Choose...</option>
                            {{#each people}}
                            <option value="{{this._id}}">{{this.name}}</option>
                            {{/each}}
                        </select>
                    </div>

                    <div class="form-group col-md-6">
                        <label for="programEnrolled">Program Enrolled</label>
                            <!-- Hidden input to hold the program ID -->
                                <input type="hidden" id="programEnrolled" name="programEnrolled" value="{{program._id}}">
                            <!-- Visible, disabled input to display the program name -->
                                <input type="text" class="form-control" value="{{program.name}}" readonly>

                    </div>

                     <div class="form-group col-md-6">
                        <label for="status">Status</label>
                        <select class="form-control" id="status" name="status" required>
                            <option value="" selected disabled>Choose...</option>
                            <!-- Not final. The options can be changed. -->
                            <option value="Active">Active</option>
                            <option value="Suspended">Suspended</option>
                            <option value="Terminated">Terminated</option>
                        </select>
                    </div>

                    <div class="form-group col-md-6">
                        <label for="benefitDelivered">Benefit Delivered</label>
                        <select class="form-control" id="benefitDelivered" name="benefitDelivered" required>
                            <option value="" selected disabled>Choose...</option>
                            {{#each benefits}}
                            <option value="{{this._id}}">{{this.name}}</option>
                            {{/each}}
                        </select>
                    </div>

                    <div class="form-group col-md-6">
                        <label for="date_received">Date Received</label>
                        <input type="date" class="form-control" id="date_received" name="date_received" placeholder="Date" required>
                    </div>
                </div>
                <input type="submit" class="submitBeneficiaryBtn" value="Submit">
            </form>
        </div>

        <!--2nd Header-->
        <main class="main-content">
            <h2 class="main-title">Beneficiaries for <a href="/documentation/{{program._id}}">{{program.name}}</a></h2>

            <div class="button-group">
                <button class="btn export-btn" onclick="exportTableToCSV('Beneficiaries.csv')">Export to CSV</button>
            </div>

            <!---TABLE LISTS-->
            <div class="table-container">
                <form id="filter-form">
                <button id="resetFiltersButton" class="btn btn-secondary">Reset Filters</button>
                <table class="table table-bordered table-hover">
                    <caption>List of Beneficiaries</caption>
                    <thead class="thead-light">
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">
                                <div class="dropdown">
                                    <a class="dropdown-toggle" id="recipientDropdown" data-bs-toggle="dropdown" aria-expanded="false">Recipient</a>
                                    <ul class="dropdown-menu" aria-labelledby="recipientDropdown">
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="recipientSort" value="az" id="recipientSortAZ">
                                                <label class="form-check-label" for="recipientSortAZ">A-Z</label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="recipientSort" value="za" id="recipientSortZA">
                                                <label class="form-check-label" for="recipientSortZA">Z-A</label>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </th>
                            <th scope="col">Program Enrolled</th>
                            <th scope="col">
                                <div class="dropdown">
                                    <a class="dropdown-toggle" id="statusDropdown" data-bs-toggle="dropdown" aria-expanded="false">Status</a>
                                    <ul class="dropdown-menu" aria-labelledby="statusDropdown">
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="Active" id="activeStatus" name="statusFilter">
                                                <label class="form-check-label" for="activeStatus">Active</label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="Terminated" id="terminatedStatus" name="statusFilter">
                                                <label class="form-check-label" for="terminatedStatus">Terminated</label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="Suspended" id="suspendedStatus" name="statusFilter">
                                                <label class="form-check-label" for="suspendedStatus">Suspended</label>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </th>
                            <th scope="col">
                                <div class="dropdown">
                                    <a class="dropdown-toggle" id="benefitDropdown" data-bs-toggle="dropdown" aria-expanded="false">Benefit</a>
                                    <ul class="dropdown-menu" aria-labelledby="benefitDropdown">
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="benefitSort" value="az" id="benefitSortAZ">
                                                <label class="form-check-label" for="benefitSortAZ">A-Z</label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="benefitSort" value="za" id="benefitSortZA">
                                                <label class="form-check-label" for="benefitSortZA">Z-A</label>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </th>
                            <th scope="col">
                                <div class="dropdown">
                                    <a class="dropdown-toggle" id="dateDropdown" data-bs-toggle="dropdown" aria-expanded="false">Date Received</a>
                                    <ul class="dropdown-menu" aria-labelledby="dateDropdown">
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="dateSort" value="newest" id="dateSortNewest">
                                                <label class="form-check-label" for="dateSortNewest">Newest</label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="dateSort" value="oldest" id="dateSortOldest">
                                                <label class="form-check-label" for="dateSortOldest">Oldest</label>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </th>
                            <th scope="col">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="programInfo">
                        <!-- Program rows will be populated here -->
                        {{#each beneficiaries}}
                        <tr>
                            <th scope="row">{{incremented @index}}</th>
                            <td>{{this.person_registered.name}}</td>
                            <td>{{this.program_enrolled.name}}</td>
                            <td>{{this.status}}</td>
                            <td>{{this.benefit_delivered.name}}</td>
                            <td>{{formatDate this.date_received}}</td>
                            <td>
                                <button class="editBtn" data-id="{{this._id}}"><i class="bi bi-pencil"></i></button>
                                <button class="deleteBtn" data-id="{{this._id}}"><i class="bi bi-trash"></i></button>
                            </td>
                        </tr>
                        {{/each}}
                    </tbody>
                </table>
                </form>
            </div>
        </main>

        <nav aria-label="page-navigation">
            <ul class="pagination">
                <!-- Pagination items will be dynamically added here -->
            </ul>
        </nav>

        <!-- JQuery -->
        <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
        <!-- Bootstrap JS -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
        <!-- <script src="../public/js/app.js"></script> -->
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                document.getElementById("menu-toggle").addEventListener("click", function() {
                    document.getElementById("wrapper").classList.toggle("toggled");
                    document.querySelector(".main-content").classList.toggle("toggled");
                    document.querySelector(".header-right").classList.toggle("toggled");
                });

                // Add event listeners to filter elements
                document.querySelectorAll('input[name="recipientSort"]').forEach(input => {
                    input.addEventListener('change', applyFiltersAndSort);
                });
                document.querySelectorAll('input[name="statusFilter"]').forEach(input => {
                    input.addEventListener('change', applyFiltersAndSort);
                });
                document.querySelectorAll('input[name="benefitSort"]').forEach(input => {
                    input.addEventListener('change', applyFiltersAndSort);
                });
                document.querySelectorAll('input[name="dateSort"]').forEach(input => {
                    input.addEventListener('change', applyFiltersAndSort);
                });

                $('#resetFiltersButton').on('click', function() {
                    $('#filter-form')[0].reset();
                    applyFiltersAndSort();
                });

                $(document).ready(function() {
                    $("#myInput").on("keyup", function() {
                        var value = $(this).val().toLowerCase();
                        $(".dropdown-menu li").filter(function() {
                            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                        });
                    });
                });

                var newMemberAddBtn = document.querySelector('.addProgramBtn button'),
                    darkBg = document.querySelector('.dark_bg'),
                    popupForm = document.querySelector('.popup'),
                    crossBtn = document.querySelector('.closeBtn'),
                    submitBeneficiaryBtn = document.querySelector('.submitBeneficiaryBtn'),
                    modalTitle = document.querySelector('.modalTitle'),
                    form = document.querySelector('#beneficiaryForm'),
                    formInputFields = document.querySelectorAll('#beneficiaryForm input, #beneficiaryForm select'),
                    programInfo = document.querySelector('.programInfo');
                resetFiltersButton = document.getElementById('resetFiltersButton');

                let originalData = localStorage.getItem('beneficiaries') ? JSON.parse(localStorage.getItem('beneficiaries')) : [];
                let getData = [...originalData];

                let isEdit = false,
                    editId;

                newMemberAddBtn.addEventListener('click', () => {
                    isEdit = false;
                    submitBeneficiaryBtn.innerHTML = "Submit";
                    modalTitle.innerHTML = "Fill the Form";
                    form.reset();
                    formInputFields.forEach(input => input.disabled = false);
                    submitBeneficiaryBtn.style.display = "block";
                    darkBg.classList.add('active');
                    popupForm.classList.add('active');
                });

                crossBtn.addEventListener('click', () => {
                    darkBg.classList.remove('active');
                    popupForm.classList.remove('active');
                    form.reset();
                    submitBeneficiaryBtn.style.display = "block";
                    formInputFields.forEach(input => input.disabled = false);
                });

                function addEventListeners() {
                    document.querySelectorAll('.viewBtn').forEach(button => {
                        button.addEventListener('click', (e) => {
                            const id = parseInt(e.currentTarget.getAttribute('data-id'));
                            readInfo(id);
                        });
                    });

                    document.querySelectorAll('.editBtn').forEach(button => {
                        button.addEventListener('click', (e) => {
                            const id = parseInt(e.currentTarget.getAttribute('data-id'));
                            editInfo(id);
                        });
                    });

                    document.querySelectorAll('.deleteBtn').forEach(button => {
                        button.addEventListener('click', (e) => {
                            const id = e.currentTarget.getAttribute('data-id');
                            deleteInfo(id, e);
                        });
                    });
                }

                function editInfo(id) {
                    isEdit = true;
                    editId = getData.findIndex(item => item.id === id);
                    const beneficiary = getData[editId];
                    if (beneficiary) {
                        form.firstName.value = beneficiary.firstName;
                        form.lastName.value = beneficiary.lastName;
                        form.dob.value = beneficiary.dob;
                        form.gen.value = beneficiary.gen;
                        form.contactNo.value = beneficiary.contactNo;
                        form.brgy.value = beneficiary.brgy;
                        form.disability.value = beneficiary.disability;
                        form.comor.value = beneficiary.comor;
                        form.pwdIdCardNo.value = beneficiary.pwdIdCardNo;
                        modalTitle.innerHTML = "Edit Beneficiary";
                        formInputFields.forEach(input => input.disabled = false);
                        submitBeneficiaryBtn.style.display = "block";
                        submitBeneficiaryBtn.innerHTML = "Update";
                        darkBg.classList.add('active');
                        popupForm.classList.add('active');
                    }
                }

                function deleteInfo(id, e) {
                    if (confirm("Are you sure you want to delete this beneficiary?")) {
                        originalData = originalData.filter(item => item.id !== id);
                        localStorage.setItem('programs', JSON.stringify(originalData));
                        getData = [...originalData];
                        let index = e?.currentTarget?.closest("tr")?.querySelector("td:first-child")?.textContent;
                        console.log("Deleting the selected beneficiary...");
                        $.post(`/beneficiaries/delete`, {beneficiary_id: id}, (data, status, xhr) => {
                            if (status === "success" && xhr.status === 200) {
                                alert("Beneficiary with ID " + index + " has been deleted");
                            } else {
                                alert("Error: Beneficiary with ID " + index + " cannot be deleted");
                            }
                            location.reload();
                        });
                        e.currentTarget.closest("tr").remove();
                    }
                }

                resetFiltersButton.addEventListener('click', () => {
                    document.querySelectorAll('input[type="checkbox"], input[type="radio"]').forEach(input => {
                        input.checked = false;
                    });
                    getData = [...originalData];
                    applyFiltersAndSort();
                });

                function applyFiltersAndSort() {
                    const recipientSort = $('input[name="recipientSort"]:checked').val();
                    const statusFilter = $('input[name="statusFilter"]:checked').map(function() { return this.value; }).get();
                    const benefitSort = $('input[name="benefitSort"]:checked').val();
                    const dateSort = $('input[name="dateSort"]:checked').val();
                    const programId = '{{program._id}}'; // Adjust this as necessary

                    let query = [];

                    if (recipientSort) query.push(`recipientSort=${recipientSort}`);
                    if (statusFilter.length) query.push(`statusFilter=${statusFilter.join(',')}`);
                    if (benefitSort) query.push(`benefitSort=${benefitSort}`);
                    if (dateSort) query.push(`dateSort=${dateSort}`);
                    if (programId) query.push(`programId=${programId}`);

                    const queryString = query.length > 0 ? `?${query.join('&')}` : '';

                    console.log('Query String:', queryString);

                    fetch(`/beneficiaries${queryString}`)
                        .then(response => response.text())
                        .then(html => {
                            console.log('Received HTML:', html);
                            const newDoc = new DOMParser().parseFromString(html, 'text/html');
                            const newTableBody = newDoc.querySelector('.programInfo').innerHTML;
                            document.querySelector('.programInfo').innerHTML = newTableBody;
                            addEventListeners();
                        })
                        .catch(error => console.error('Error fetching filtered data:', error));
                }
                addEventListeners();
            });

            /* Exporting to CSV function */
            function downloadCSV(csv, filename) {
                let csvFile;
                let downloadLink;

                csvFile = new Blob([csv], {
                    type: 'text/csv'
                });

                downloadLink = document.createElement('a');
                downloadLink.download = filename;
                downloadLink.href = window.URL.createObjectURL(csvFile);
                downloadLink.style.display = 'none';
                document.body.appendChild(downloadLink);
                downloadLink.click();
            }

            function exportTableToCSV(filename) {
                const rows = document.querySelectorAll('.table-container table tr');
                let csv = [];
                for (let i = 0; i < rows.length; i++) {
                    const row = [],
                        cols = rows[i].querySelectorAll('td, th');
                    for (let j = 0; j < cols.length; j++) {
                        const data = cols[j].innerText.replace(/(\r\n|\n|\r)/gm, '').replace(/(\s\s)/gm, ' ');
                        row.push('"' + data + '"');
                    }
                    csv.push(row.join(','));
                }
                downloadCSV(csv.join('\n'), filename);
            }
        </script>
</body>

</html>
