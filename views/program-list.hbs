<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LPPWDFI | Program Lists</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="/css/program-list-style.css">
    <script src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js"></script>
</head>

<body>
    <div id="wrapper">
        <div class="overlay dark_bg"></div>

        <!-- Sidebar -->
        <nav class="navbar navbar-inverse fixed-top" id="sidebar-wrapper" role="navigation">
            <ul class="nav sidebar-nav">
                <div class="sidebar-header">
                    <div class="sidebar-brand">
                        <a href="#">Admin</a>
                        <hr class="navbar-solid">
                    </div>
                </div>
                <li><a href="/">Dashboard</a></li>
                <li><a href="/programs">Programs</a></li>
                <li><a href="/people">People</a></li>
                <li><a href="/benefactors">Benefactor</a></li>
                <li><a href="/benefits">Benefits</a></li>
                <li><a href="/settings">Settings</a></li>
                <li class="logout-link">
                    <form action="/logout" method="POST">
                        <button type="submit" class="btn btn-link logout-btn">
                            <i class="bi bi-box-arrow-right"></i> 
                            Logout
                        </button>
                    </form>
                </li>
            </ul>
        </nav>

        <!-- Header -->
        <div class="bg-half-gradient">
            <header class="bg-gradient">
                <div class="container d-flex align-items-center">
                    <div class="menu-icon mr-3" id="menu-toggle">&#9776;</div>
                    <a href="../views/dashboard.html">
                        <img src="../images/LPPWDFI-Logo.png" alt="Logo" class="logo mr-3">
                    </a>
                    <div>
                        <h1 class="org-name">Programs</h1>
                    </div>
                </div>
                <div class="addProgramBtn">
                    <button type="button" data-bs-toggle="modal" data-bs-target="#modal-program-create">Create</button>
                </div>
            </header>
        </div>

        <!-- Main Content -->
        <main class="main-content">
            <h2 class="main-title">Program Lists</h2>
            <div class="button-group">
                <button class="btn export-btn" onclick="exportTableToCSV('Programs.csv')">Export to CSV</button>
            </div>

            <!---TABLE LISTS-->
            <div class="table-container">
                <form id="filter-form">
                <button id="resetFiltersButton" class="btn btn-secondary">Reset Filters</button>
                <table class="table table-bordered table-hover">
                    <caption>List of Programs</caption>
                    <thead class="thead-light">
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">
                                <div class="dropdown">
                                    <a class="dropdown-toggle" id="nameDropdown" data-bs-toggle="dropdown" aria-expanded="false">Program Name</a>
                                    <ul class="dropdown-menu" aria-labelledby="nameDropdown">
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="nameSort" value="az" id="nameSortAZ">
                                                <label class="form-check-label" for="nameSortAZ">A-Z</label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="nameSort" value="za" id="nameSortZA">
                                                <label class="form-check-label" for="nameSortZA">Z-A</label>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </th>
                            <th scope="col">Last Updated</th>
                            <th scope="col">Date Program Created</th>
                            <th scope="col">
                                <div class="dropdown">
                                    <a class="dropdown-toggle" id="typeDropdown" data-bs-toggle="dropdown" aria-expanded="false">Type of Program</a>
                                    <ul class="dropdown-menu" aria-labelledby="typeDropdown">
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="Assistance" id="assistanceCheck" name="typeFilter">
                                                <label class="form-check-label" for="assistanceCheck">Assistance</label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="Initiative" id="initiativeCheck" name="typeFilter">
                                                <label class="form-check-label" for="initiativeCheck">Initiative</label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="Service" id="serviceCheck" name="typeFilter">
                                                <label class="form-check-label" for="serviceCheck">Service</label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="Program" id="programCheck" name="typeFilter">
                                                <label class="form-check-label" for="programCheck">Program</label>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </th>
                            <th scope="col">
                                <div class="dropdown">
                                    <a class="dropdown-toggle" id="frequencyDropdown" data-bs-toggle="dropdown" aria-expanded="false">Frequency</a>
                                    <ul class="dropdown-menu" aria-labelledby="frequencyDropdown">
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="Monthly" id="monthlyCheck" name="frequencyFilter">
                                                <label class="form-check-label" for="monthlyCheck">Monthly</label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="Quarterly" id="quarterlyCheck" name="frequencyFilter">
                                                <label class="form-check-label" for="quarterlyCheck">Quarterly</label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="Semi-Annual" id="semiAnnualCheck" name="frequencyFilter">
                                                <label class="form-check-label" for="semiAnnualCheck">Semi-Annual</label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="Yearly" id="yearlyCheck" name="frequencyFilter">
                                                <label class="form-check-label" for="yearlyCheck">Yearly</label>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </th>
                            <th scope="col">
                                <div class="dropdown">
                                    <a class="dropdown-toggle" id="assistanceTypeDropdown" data-bs-toggle="dropdown" aria-expanded="false">Assistance Type</a>
                                    <ul class="dropdown-menu" aria-labelledby="assistanceTypeDropdown">
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="Educational" id="educationalCheck" name="assistanceTypeFilter">
                                                <label class="form-check-label" for="educationalCheck">Educational</label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="Financial" id="financialCheck" name="assistanceTypeFilter">
                                                <label class="form-check-label" for="financialCheck">Financial</label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="Medical" id="medicalCheck" name="assistanceTypeFilter">
                                                <label class="form-check-label" for="medicalCheck">Medical</label>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </th>

                            <th scope="col">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Program rows will be populated here -->
                        {{#each programs}}
                        <tr data-program-id="{{this._id}}">
                            <td class="program-index">{{incremented @index}}</td>
                            <td class="program-name"><a href="/beneficiaries/{{this._id}}">{{this.name}}</a></td>
                            <td class="program-lastupdate-date">{{formatDate this.recent_update_date}}</td>
                            <td class="program-creation-date">{{formatDate this.creation_date}}</td>
                            <td class="program-type">{{this.program_type}}</td>
                            <td class="program-frequency">{{this.frequency}}</td>
                            <td class="program-assistance-type">{{this.assistance_type}}</td>
                            <td class="program-controls">
                                <button class="editBtn" data-bs-toggle="modal" data-bs-target="#modal-program-edit"><i class="bi bi-pencil"></i></button>
                                <button class="deleteBtn" data-id="{{this._id}}"><i class="bi bi-trash"></i></button>
                            </td>
                        </tr>
                        {{/each}}
                    </tbody>
                </table>
                </form>
            </div>
        </main>

        <nav aria-label="page-navigation">
            <ul class="pagination">
                <!-- Pagination items will be dynamically added here -->
            </ul>
        </nav>

        <!-- Modal -->
        <div class="modal fade" id="modal-program-create">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h2 class="modal-title">Create a Program</h2>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="programForm" action="/programs/create" method="POST">
                            <div class="row">
                                <div class="form-group col-md-6">
                                    <label for="programName">Program Name</label>
                                    <input type="text" class="form-control" name="programName" placeholder="Program Name" required>
                                </div>

                                <div class="form-group col-md-6">
                                    <label for="programType">Type of Program</label>
                                    <select name="programType" class="form-control" required>
                                <option value="" selected disabled>Choose...</option>
                                <option value="Assistance">Assistance</option>
                                <option value="Initiative">Initiative</option>
                                <option value="Service">Service</option>
                                <option value="Program">Program</option>
                            </select>
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="programFrequency">Frequency</label>
                                    <select name="programFrequency" class="form-control" required>
                                <option value="" selected disabled>Choose...</option>
                                <option value="Monthly">Monthly</option>
                                <option value="Quarterly">Quarterly</option>
                                <option value="Semi-Annual">Semi-Annual</option>
                                <option value="Yearly">Yearly</option>
                            </select>
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="assistanceType">Assistance Type</label>
                                    <select name="assistanceType" class="form-control" required>
                                <option value="" selected disabled>Choose...</option>
                                <option value="Educational">Educational</option>
                                <option value="Financial">Financial</option>
                                <option value="Medical">Medical</option>
                            </select>
                                </div>
                            </div>

                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="submitBtn" form="programForm">Submit</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Edit Program Modal -->
        <div class="modal fade" id="modal-program-edit" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h2 class="modal-title" id="editProgramModalLabel">Edit Program</h2>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editProgramForm" action="/programs/edit" method="POST">
                            <input type="hidden" id="editProgramId" name="id">
                            <div class="row">
                                <div class="form-group col-md-6">
                                    <label for="editProgramName" class="form-label">Program Name</label>
                                    <input type="text" class="form-control" id="editProgramName" name="programName">
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="editProgramType" class="form-label">Program Type</label>
                                    <select class="form-control" id="editProgramType" name="programType">
                                        <option value="Assistance">Assistance</option>
                                        <option value="Initiative">Initiative</option>
                                        <option value="Service">Service</option>
                                        <option value="Program">Program</option>
                                    </select>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-6">
                                    <label for="editFrequency" class="form-label">Frequency</label>
                                    <select class="form-control" id="editFrequency" name="programFrequency">
                                        <option value="Monthly">Monthly</option>
                                        <option value="Quarterly">Quarterly</option>
                                        <option value="Semi-Annual">Semi-Annual</option>
                                        <option value="Yearly">Yearly</option>
                                    </select>
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="editAssistanceType" class="form-label">Assistance Type</label>
                                    <select class="form-control" id="editAssistanceType" name="assistanceType">
                                        <option value="Educational">Educational</option>
                                        <option value="Financial">Financial</option>
                                        <option value="Medical">Medical</option>
                                    </select>
                                </div>
                        </form>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="submitBtn" form="editProgramForm">Update</button>
                        </div>
                    </div>
                </div>
            </div>

<!-- JQuery -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<!-- <script src="/public/js/program-list.js"></script>--> 
<!-- IM NOT SURE IF THE JS IS CONNECTED, I TESTED THIS JS OUT WHEN I PUT THE JS CODE HERE IN THIS FILE, NOT IN A SEPARATE ONE -->
<!--I ALSO PUT ALL THE OLD PUSHED CODE IN THE JS SCRIPT FILE -->
 <script>
        document.addEventListener('DOMContentLoaded', function() {
        document.getElementById("menu-toggle").addEventListener("click", function() {
            document.getElementById("wrapper").classList.toggle("toggled");
            document.querySelector(".main-content").classList.toggle("toggled");
            document.querySelector(".header-right").classList.toggle("toggled");
        });

        // Add event listeners to filter elements
    document.querySelectorAll('input[name="nameSort"]').forEach(input => {
        input.addEventListener('change', applyFiltersAndSort);
    });
    document.querySelectorAll('input[name="typeFilter"]').forEach(input => {
        input.addEventListener('change', applyFiltersAndSort);
    });
    document.querySelectorAll('input[name="frequencyFilter"]').forEach(input => {
        input.addEventListener('change', applyFiltersAndSort);
    });
    document.querySelectorAll('input[name="assistanceTypeFilter"]').forEach(input => {
        input.addEventListener('change', applyFiltersAndSort);
    });

    $('#resetFiltersButton').on('click', function() {
        $('#filter-form')[0].reset();
        applyFiltersAndSort();
    });

        const newMemberAddBtn = document.querySelector('.addProgramBtn button'),
            darkBg = document.querySelector('.dark_bg'),
            popupForm = document.querySelector('.popup'),
            crossBtn = document.querySelector('.btn-close'),
            submitBtn = document.querySelector('.submitBtn'),
            modalTitle = document.querySelector('.modal-title'),
            form = document.querySelector('#programForm'),
            formInputFields = document.querySelectorAll('#programForm input, #programForm select'),
            resetFiltersButton = document.getElementById('resetFiltersButton');

        let originalData = localStorage.getItem('programs') ? JSON.parse(localStorage.getItem('programs')) : [];
        let getData = [...originalData];

        let isEdit = false,
            editId;

        newMemberAddBtn.addEventListener('click', () => {
            isEdit = false;
            submitBtn.innerHTML = "Submit";
            modalTitle.innerHTML = "Fill the Form";
            form.reset();
            formInputFields.forEach(input => input.disabled = false);
            submitBtn.style.display = "block";
        });

        crossBtn.addEventListener('click', () => {
            form.reset();
            submitBtn.style.display = "block";
            formInputFields.forEach(input => input.disabled = false);
        });

        form.addEventListener('submit', (e) => {
            e.preventDefault();
            const now = new Date();
            const program = {
                id: Date.now(),
                programName: form.programName.value,
                programType: form.programType.value,
                programFrequency: form.programFrequency.value,
                assistanceType: form.assistanceType.value,
                dateCreated: now.toLocaleDateString(),
                lastUpdated: now.toLocaleDateString() + ' ' + now.toLocaleTimeString()
            };

            if (!isEdit) {
                originalData.push(program);
            } else {
                originalData[editId] = program;
            }

            $.post("/programs/create", program, (data, status, xhr) => {
                if (status === "success" && xhr.status === 201) {
                    alert("Program has been created.");
                    location.reload();
                }
            });

            localStorage.setItem('programs', JSON.stringify(originalData));
            getData = [...originalData];

            location.reload();
            darkBg.classList.remove('active');
            popupForm.classList.remove('active');
            form.reset();
        });

        function addEventListeners() {
            document.querySelectorAll('.editBtn').forEach(button => {
            button.addEventListener('click', (e) => {
                const id = e.currentTarget.closest("tr").getAttribute('data-program-id');
                editInfo(id, e);
            });
        });
            document.querySelectorAll('.deleteBtn').forEach(button => {
                button.addEventListener('click', (e) => {
                    const id = e.currentTarget.getAttribute('data-id');
                    deleteInfo(id, e);
                });
            });
        }

        document.getElementById("editProgramForm").addEventListener('submit', (e) => {
        let program_id = document.getElementById("editProgramId").value;
        let program_name = document.getElementById("editProgramName").value;
        let program_type = document.getElementById("editProgramType").value;
        let program_frequency = document.getElementById("editFrequency").value;
        let program_assistance_type = document.getElementById("editAssistanceType").value;

        let program = {
            program_id: program_id,
            program_name: program_name,
            program_type: program_type,
            program_frequency: program_frequency,
            program_assistance_type: program_assistance_type
        };

        e.preventDefault();

        $.post("/programs/edit", program, (data, status, xhr) => {
            if (status === "success" && xhr.status === 200) {
                let modalInstance = bootstrap.Modal.getInstance(document.getElementById("modal-program-edit"));
                modalInstance.hide(); // Hide the modal
                alert("Update program successfully.");
            } else {
                alert("Error updating program");
            }
        }).fail(() => {
            alert("Error updating program");
        });
    });

    function onBtnEditClick(e) {
        let program_id = e.currentTarget.closest("tr").getAttribute("data-program-id");
        let program_name = e.currentTarget.closest("tr").querySelector(".program-name > a").textContent;
        let program_type = e.currentTarget.closest("tr").querySelector(".program-type").textContent;
        let program_frequency = e.currentTarget.closest("tr").querySelector(".program-frequency").textContent;
        let program_assistance_type = e.currentTarget.closest("tr").querySelector(".program-assistance-type").textContent;

        let modal_edit = document.getElementById("modal-program-edit");
        let modal_edit_id = modal_edit.querySelector("#editProgramId");
        let modal_edit_name = modal_edit.querySelector("#editProgramName");
        let modal_edit_type = modal_edit.querySelector("#editProgramType");
        let modal_edit_frequency = modal_edit.querySelector("#editFrequency");
        let modal_edit_assistance_type = modal_edit.querySelector("#editAssistanceType");

        modal_edit_id.value = program_id;
        modal_edit_name.value = program_name;
        modal_edit_type.value = program_type;
        modal_edit_frequency.value = program_frequency;
        modal_edit_assistance_type.value = program_assistance_type;
    }

    function editInfo(id, e) {
        onBtnEditClick(e);
        isEdit = true;
        editId = getData.findIndex(item => item.id === id);
        const program = getData[editId];
        if (program) {
            form.programName.value = program.programName;
            form.programType.value = program.programType;
            form.frequency.value = program.frequency;
            form.assistanceType.value = program.assistanceType;
            modalTitle.innerHTML = "Edit Program";
            formInputFields.forEach(input => input.disabled = false);
            submitBtn.style.display = "block";
            submitBtn.innerHTML = "Update";
            darkBg.classList.add('active');
            popupForm.classList.add('active');
        }
    }

        function deleteInfo(id, e) {
            if (confirm("Are you sure you want to delete this program?")) {
                originalData = originalData.filter(item => item.id !== id);
                localStorage.setItem('programs', JSON.stringify(originalData));

                $.post(`/programs/delete`, { program_id: id })
                    .done((data, status, xhr) => {
                        if (status === "success" && xhr.status === 200) {
                            alert("Program has been deleted.");
                            location.reload();
                        } else {
                            alert("Failed to delete program. Please try again.");
                        }
                    }).fail((xhr, status, error) => {
                        alert("Error deleting program. Please try again later.");
                        console.error(error);
                    });
            }
        }
        function applyFiltersAndSort() {
        const nameSort = $('input[name="nameSort"]:checked').val();
        const typeFilter = $('input[name="typeFilter"]:checked').map(function() { return this.value; }).get();
        const frequencyFilter = $('input[name="frequencyFilter"]:checked').map(function() { return this.value; }).get();
        const assistanceTypeFilter = $('input[name="assistanceTypeFilter"]:checked').map(function() { return this.value; }).get();

        let query = [];

        if (nameSort) query.push(`nameSort=${nameSort}`);
        if (typeFilter.length) query.push(`typeFilter=${typeFilter.join(',')}`);
        if (frequencyFilter.length) query.push(`frequencyFilter=${frequencyFilter.join(',')}`);
        if (assistanceTypeFilter.length) query.push(`assistanceTypeFilter=${assistanceTypeFilter.join(',')}`);

        const queryString = query.length > 0 ? `?${query.join('&')}` : '';

        console.log('Query String:', queryString);

        fetch(`/programs${queryString}`)
            .then(response => response.text())
            .then(html => {
                console.log('Received HTML:', html);
                const newDoc = new DOMParser().parseFromString(html, 'text/html');
                const newTableBody = newDoc.querySelector('tbody').innerHTML;
                document.querySelector('tbody').innerHTML = newTableBody;
                addEventListeners();
            })
            .catch(error => console.error('Error fetching filtered data:', error));
    }
        addEventListeners();
    });

    function downloadCSV(csv, filename) {
        let csvFile;
        let downloadLink;
        csvFile = new Blob([csv], { type: 'text/csv' });

        downloadLink = document.createElement('a');
        downloadLink.download = filename;
        downloadLink.href = window.URL.createObjectURL(csvFile);
        downloadLink.style.display = 'none';
        document.body.appendChild(downloadLink);
        downloadLink.click();
    }

    function exportTableToCSV(filename) {
        const rows = document.querySelectorAll('.table-container table tr');
        let csv = [];
        for (let i = 0; i < rows.length; i++) {
            const row = [],
                cols = rows[i].querySelectorAll('td, th');
            for (let j = 0; j < cols.length; j++) {
                const data = cols[j].innerText.replace(/(\r\n|\n|\r)/gm, '').replace(/(\s\s)/gm, ' ');
                row.push('"' + data + '"');
            }
            csv.push(row.join(','));
        }
        downloadCSV(csv.join('\n'), filename);
    }
 </script>

</body>

</html>
