<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LPPWDFI | People Lists</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="/css/program-list-style.css">
    <script src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js"></script>
</head>

<body>
    <div id="wrapper">
        <div class="overlay dark_bg"></div>
        <!-- Modal Background -->

        <!-- Sidebar -->
        <nav class="navbar navbar-inverse fixed-top" id="sidebar-wrapper" role="navigation">
            <ul class="nav sidebar-nav">
                <div class="sidebar-header">
                    <div class="sidebar-brand">
                        <a href="#">Admin</a>
                        <hr class="navbar-solid">
                    </div>
                </div>

                <li><a href="/">Dashboard</a></li>
                <li><a href="/programs">Programs</a></li>


                <!--
                <li class="dropdown">
                    <a href="../views/program-list.html" class="dropdown-toggle" data-toggle="dropdown">Programs<span class="caret"></span></a>
                    <ul class="dropdown-menu animated fadeInLeft" role="menu">
                        <li><a href="#pictures">Program 1</a></li>
                        <li><a href="#videos">Program 2</a></li>
                        <li><a href="#books">Program 3</a></li>
                        <li><a href="#art">Program 4</a></li>
                        <li><a href="#awards">Program 4</a></li>
                    </ul>
                </li>
                --->

                <li><a href="/beneficiaries">Beneficiary</a></li>
                <li><a href="/benefactors">Benefactor</a></li>
                <li><a href="/device">Devices</a></li>
                <li><a href="/settings">Settings</a></li>
                <li class="logout-link"><a href="#logout"><i class="bi bi-box-arrow-right"></i>  Logout</a></li>
            </ul>
        </nav>
        <!-- /#sidebar-wrapper -->

         <!-- HEADER -->
        <div class="bg-half-gradient">
            <header class="bg-gradient">
                <div class="container d-flex align-items-center">
                    <div class="menu-icon mr-3" id="menu-toggle">&#9776;</div>
                    <a href="../views/dashboard.html">
                        <img src="../images/LPPWDFI-Logo.png" alt="Logo" class="logo mr-3">
                    </a>
                    <div>
                        <h1 class="org-name">Programs</h1>
                    </div>
                </div>

                <div class="addPeopleBtn">
                    <button>Create</button>
                </div>
                 
            </header>
        </div>


        <!--MODAL FORM-->
        <div class="popup">
            <header>
                <h2 class="modalTitle">Fill the Form</h2>
                <span class="closeBtn">&times;</span>
            </header>
            <form id="peopleForm" action="/people/create" method="POST">
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="name">Name</label>
                        <input type="text" class="form-control" id="name" placeholder="Name" required>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="dateJoined">Date Joined</label>
                        <input type="date" id="dateJoined" class="form-control" required>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="beneficiaryStatus">Beneficiary Status</label>
                        <select id="beneficiaryStatus" class="form-control" required>
                            <option value="" selected disabled>Choose...</option>
                            <option value="Active">Active</option>
                            <option value="Dropped">Dropped</option>
                        </select>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="benefitRequested">Benefit Requested</label>
                        <select id="benefitRequested" class="form-control" required>
                            <option value="" selected disabled>Choose...</option>
                            <option value="Educational">Educational</option>
                            <option value="Financial">Financial</option>
                            <option value="Medical">Medical</option>
                        </select>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="benefitReceived">Benefit Received</label>
                        <select id="benefitReceived" class="form-control" required>
                            <option value="" selected disabled>Choose...</option>
                            <option value="Educational">Educational</option>
                            <option value="Financial">Financial</option>
                            <option value="Medical">Medical</option>
                        </select>
                    </div>
                     <div class="form-group col-md-6">
                        <label for="dateReceived">Date Received</label>
                        <input type="date" id="dateReceived" class="form-control" required>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="status">Status</label>
                        <select id="status" class="form-control" required>
                            <option value="" selected disabled>Choose...</option>
                            <option value="Approved">Approved</option>
                            <option value="Pending">Pending</option>
                            <option value="Denied">Denied</option>
                        </select>
                    </div>
                </div>
                <input type="submit" class="submitBtn" value="Submit">
            </form>
        </div>


        <!--2nd Header-->
        <main class="main-content">
            <h2 class="main-title"><a href="/documentation/{{program._id}}"> {{program.name}}</a></h2>
            <div class="button-group">
                <button class="btn export-btn" onclick="exportTableToCSV('People.csv')">Export to CSV</button>
            </div>

            <!---TABLE LISTS-->
            <div class="table-container">
                <button id="resetFiltersButton" class="btn btn-secondary">Reset Filters</button>
                <table class="table table-bordered table-hover">
                    <caption>List of Beneficiaries</caption>
                    <thead class="thead-light">
                        <tr>
                            <th scope="col">#</th> 
                            <th scope="col">
                                <div class="dropdown">
                                    <a class="dropdown-toggle" id="nameDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                        Beneficiary
                                    </a>
                                    <ul class="dropdown-menu" aria-labelledby="nameDropdown">
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="nameSort" value="az" id="nameSortAZ">
                                                <label class="form-check-label" for="nameSortAZ">
                                                    A-Z
                                                </label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="nameSort" value="za" id="nameSortZA">
                                                <label class="form-check-label" for="nameSortZA">
                                                    Z-A
                                                </label>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </th>
                            <th scope="col">
                                <div class="dropdown">
                                    <a class="dropdown-toggle" id="dateJoinedDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                        Date Joined
                                    </a>
                                    <ul class="dropdown-menu" aria-labelledby="dateJoinedDropdown">
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="dateJoinedSort" value="new" id="dateJoinedSortNew"> 
                                                <label class="form-check-label" for="dateJoinedSortNew">
                                                    Latest
                                                </label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="dateJoinedSort" value="old" id="dateJoinedSortOld"> 
                                                <label class="form-check-label" for="dateJoinedSortOld">
                                                    Oldest
                                                </label>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </th>
                            <th scope="col">
                                 <div class="dropdown">
                                    <a class="dropdown-toggle" id="beneficiaryStatusDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                        Beneficiary Status
                                    </a>
                                    <ul class="dropdown-menu" aria-labelledby="beneficiaryStatusDropdown">
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="active" id="activeCheck" name="beneficiaryStatusFilter">
                                                <label class="form-check-label" for="activeCheck">
                                                    Active
                                                </label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="dropped" id="droppedCheck" name="beneficiaryStatusFilter">
                                                <label class="form-check-label" for="droppedCheck">
                                                    Dropped
                                                </label>
                                            </div>
                                        </li>
                                    </ul>
                                 </div>
                            </th>
                            <th scope="col">
                                <div class="dropdown">
                                    <a class="dropdown-toggle" id="benefitRequestedDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                        Benefit Requested
                                    </a>
                                    <ul class="dropdown-menu" aria-labelledby="benefitRequestedDropdown">
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="educational" id="educationalCheck" name="benefitRequestedFilter">
                                                <label class="form-check-label" for="educationalCheck">
                                                    Educational
                                                </label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="financial" id="financialCheck" name="benefitRequestedFilter">
                                                <label class="form-check-label" for="financialCheck">
                                                    Financial
                                                </label>
                                            </div>
                                        </li>
                                         <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="medical" id="medicalCheck" name="benefitRequestedFilter">
                                                <label class="form-check-label" for="medicalCheck">
                                                    Medical
                                                </label>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </th>
                            <th scope="col">
                                <div class="dropdown">
                                    <a class="dropdown-toggle" id="benefitReceivedDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                        Benefit Received
                                    </a>
                                    <ul class="dropdown-menu" aria-labelledby="benefitReceivedDropdown">
                                       <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="educational" id="educationalCheck" name="benefitReceivedFilter">
                                                <label class="form-check-label" for="educationalCheck">
                                                    Educational
                                                </label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="financial" id="financialCheck" name="benefitReceivedFilter">
                                                <label class="form-check-label" for="financialCheck">
                                                    Financial
                                                </label>
                                            </div>
                                        </li>
                                         <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="medical" id="medicalCheck" name="benefitReceivedFilter">
                                                <label class="form-check-label" for="medicalCheck">
                                                    Medical
                                                </label>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </th>
                            <th scope="col">
                                <div class="dropdown">
                                    <a class="dropdown-toggle" id="dateReceivedDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                        Date Received
                                    </a>
                                    <ul class="dropdown-menu" aria-labelledby="dateReceivedDropdown">
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="dateReceivedSort" value="new" id="dateReceivedSortNew"> 
                                                <label class="form-check-label" for="dateReceivedSortNew">
                                                    Latest
                                                </label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="dateReceivedSort" value="old" id="dateReceivedSortOld"> 
                                                <label class="form-check-label" for="dateReceivedSortOld">
                                                    Oldest
                                                </label>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </th>
                            <th scope="col">
                                <div class="dropdown">
                                    <a class="dropdown-toggle" id="statusDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                       Status
                                    </a>
                                    <ul class="dropdown-menu" aria-labelledby="statusDropdown">
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="approved" id="approvedCheck" name="statusFilter">
                                                <label class="form-check-label" for="approvedCheck">
                                                    Approved
                                                </label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="pending" id="pendingCheck" name="statusFilter">
                                                <label class="form-check-label" for="pendingCheck">
                                                    Pending
                                                </label>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="denied" id="deniedCheck" name="statusFilter">
                                                <label class="form-check-label" for="deniedCheck">
                                                    Denied
                                                </label>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </th>
                        </tr>
                    </thead>
                    <tbody class="peopleInfo">
                        <!-- People rows will be populated here -->
                        {{#each people}}
                        <tr>
                            <td>{{@index}}</td>
                            <td>{{this.name}}</td>
                            <td>{{this.dateJoined}}</td>
                            <td>{{this.beneficiaryStatus}}</td>
                            <td>{{this.benefitRequested}}</td>
                            <td>{{this.benefitReceived}}</td>
                            <td>{{this.dateReceived}}</td>
                            <td>{{this.status}}</td>
                        </tr>
                        {{/each}}
                    </tbody>
                </table>
            </div>
        </main>

        <nav aria-label="page-navigation">
            <ul class="pagination">
                <!-- Pagination items will be dynamically added here -->
            </ul>
        </nav>

         <!-- JQuery -->
        <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
        <!-- Bootstrap JS -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                document.getElementById("menu-toggle").addEventListener("click", function() {
                    document.getElementById("wrapper").classList.toggle("toggled");
                    document.querySelector(".main-content").classList.toggle("toggled");
                    document.querySelector(".header-right").classList.toggle("toggled");
                });

                $(document).ready(function() {
                    $("#myInput").on("keyup", function() {
                        var value = $(this).val().toLowerCase();
                        $(".dropdown-menu li").filter(function() {
                            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                        });
                    });
                });

                var newMemberAddBtn = document.querySelector('.addPeopleBtn button'),
                    darkBg = document.querySelector('.dark_bg'),
                    popupForm = document.querySelector('.popup'),
                    crossBtn = document.querySelector('.closeBtn'),
                    submitBtn = document.querySelector('.submitBtn'),
                    modalTitle = document.querySelector('.modalTitle'),
                    form = document.querySelector('#peopleForm'),
                    formInputFields = document.querySelectorAll('#peopleForm input, #peopleForm select'),
                    peopleInfo = document.querySelector('.peopleInfo'),
                    resetFiltersButton = document.getElementById('resetFiltersButton');

                let originalData = localStorage.getItem('people') ? JSON.parse(localStorage.getItem('people')) : [];
                let getData = [...originalData];

                let isEdit = false,
                    editId;

                newMemberAddBtn.addEventListener('click', () => {
                    isEdit = false;
                    submitBtn.innerHTML = "Submit";
                    modalTitle.innerHTML = "Fill the Form";
                    form.reset();
                    formInputFields.forEach(input => input.disabled = false);
                    submitBtn.style.display = "block";
                    darkBg.classList.add('active');
                    popupForm.classList.add('active');
                });

                crossBtn.addEventListener('click', () => {
                    darkBg.classList.remove('active');
                    popupForm.classList.remove('active');
                    form.reset();
                    submitBtn.style.display = "block";
                    formInputFields.forEach(input => input.disabled = false);
                });

                 form.addEventListener('submit', (e) => {
                    e.preventDefault();
                    const now = new Date();
                    const person = {
                        id: Date.now(),
                        name: form.name.value,
                        dateJoined: form.dateJoined.value,
                        beneficiaryStatus: form.beneficiaryStatus.value,
                        benefitRequested: form.benefitRequested.value,
                        benefitReceived: form.benefitReceived.value,
                        dateReceived: form.dateReceived.value,
                        status: form.status.value
                    };

                    if (!isEdit) {
                        originalData.push(person);
                    } else {
                        originalData[editId] = person;
                    }

                    localStorage.setItem('people', JSON.stringify(originalData));
                    getData = [...originalData];
                    showInfo();
                    darkBg.classList.remove('active');
                    popupForm.classList.remove('active');
                    form.reset();
                });

                function showInfo() {
                    displayRows(getData, currentPage);
                    displayPagination(getData.length);
                    addEventListeners();
                }

                let currentPage = 1;
                const rowsPerPage = 5;

                function displayPagination(totalRows) {
                    const pagination = document.querySelector('.pagination');
                    const totalPages = Math.ceil(totalRows / rowsPerPage);

                    pagination.innerHTML = `
                        <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                            <a class="page-link" href="#" aria-label="Previous" id="prevButton">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        `;

                    for (let i = 1; i <= totalPages; i++) {
                        pagination.innerHTML += `
                        <li class="page-item ${currentPage === i ? 'active' : ''}">
                            <a class="page-link paginationButton" href="#">${i}</a>
                        </li>
                        `;
                    }

                    pagination.innerHTML += `
                    <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                        <a class="page-link" href="#" aria-label="Next" id="nextButton">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                    `;

                    document.getElementById("prevButton").addEventListener("click", prevPage);
                    document.getElementById("nextButton").addEventListener("click", nextPage);

                    const paginationButtons = document.getElementsByClassName("paginationButton");
                    for (let i = 0; i < paginationButtons.length; i++) {
                        paginationButtons[i].addEventListener("click", function(event) {
                            event.preventDefault();
                            goToPage(parseInt(this.textContent));
                        });
                    }
                }

                function displayRows(rows, page = 1) {
                    const start = (page - 1) * rowsPerPage;
                    const end = start + rowsPerPage;
                    const paginatedRows = rows.slice(start, end);
                    const peopleInfo = document.querySelector('.peopleInfo');
                    peopleInfo.innerHTML = '';
                    paginatedRows.forEach((people, index) => {
                        const row = `
                            <tr>
                                <td>${start + index + 1}</td>
                                <td>${capitalizeFirstLetter(people.name)}</td>
                                <td>${people.dateJoined}</td>
                                <td>${people.beneficiaryStatus}</td>
                                <td>${people.benefitRequested}</td>
                                <td>${people.benefitReceived}</td>
                                <td>${people.dateReceived}</td>
                                <td>${people.status}</td>
                            </tr>
                            `;
                        peopleInfo.innerHTML += row;
                    });

                    function capitalizeFirstLetter(string) {
                        return string.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ');
                    }
                }



                function addEventListeners() {

                    // Event listeners for sorting and filtering
                    document.querySelectorAll('input[name="nameSort"], input[name="dateJoinedSort"], input[name="dateReceivedSort"]').forEach(radio => {
                        radio.addEventListener('change', () => {
                            sortData();
                            displayRows(getData, currentPage);
                            displayPagination(getData.length);
                        });
                    });
                    document.querySelectorAll('input[name="beneficiaryStatusFilter"], input[name="benefitRequestedFilter"], input[name="benefitReceivedFilter"],  input[name="statusFilter"]').forEach(checkbox => {
                        checkbox.addEventListener('change', () => {
                            filterData();
                            displayRows(getData, currentPage);
                            displayPagination(getData.length);
                        });
                    });
                }

                function prevPage(event) {
                    event.preventDefault();
                    if (currentPage > 1) {
                        currentPage--;
                        displayRows(getData, currentPage);
                        displayPagination(getData.length);
                    }
                }

                function nextPage(event) {
                    event.preventDefault();
                    const totalPages = Math.ceil(getData.length / rowsPerPage);
                    if (currentPage < totalPages) {
                        currentPage++;
                        displayRows(getData, currentPage);
                        displayPagination(getData.length);
                    }
                }

                function goToPage(page) {
                    currentPage = page;
                    displayRows(getData, currentPage);
                    displayPagination(getData.length);
                }

                function sortData() {
                    const selectedNameSort = document.querySelector('input[name="nameSort"]:checked') ? document.querySelector('input[name="nameSort"]:checked').value : null;
                    const selectedDateJoinedSort = document.querySelector('input[name="dateJoinedSort"]:checked') ? document.querySelector('input[name="dateJoinedSort"]:checked').value : null;
                    const selectedDateReceivedSort = document.querySelector('input[name="dateReceivedSort"]:checked') ? document.querySelector('input[name="dateReceivedSort"]:checked').value : null;

                    getData.sort((a, b) => {
                        // Sort by Name 
                        if (selectedNameSort === 'az') {
                            return a.name.localeCompare(b.name);
                        } else {
                            return b.name.localeCompare(a.name);
                        } 
                        
                        //Sort by dateJoined
                        if (selectedDateJoinedSort === 'new') {
                            return new Date(b.dateJoined) - new Date(a.dateJoined);
                        } else if (selectedDateJoinedSort === 'old') {
                            return new Date(a.dateJoined) - new Date(b.dateJoined);
                        }

                        // Sort by dateReceived
                        if (selectedDateReceivedSort === 'new') {
                            return new Date(b.dateReceived) - new Date(a.dateReceived);
                        } else if (selectedDateReceivedSort === 'old') {
                            return new Date(a.dateReceived) - new Date(b.dateReceived);
                        }
        
                    });
                    showInfo();
                } 

                function filterData() {
                    let filteredData = [...originalData];
                    const selectedBeneficiaryStatus = Array.from(document.querySelectorAll('input[name="beneficiaryStatusFilter"]:checked')).map(check => check.value);
                    if (selectedBeneficiaryStatus.length > 0) {
                        filteredData = filteredData.filter(people => selectedBeneficiaryStatus.includes(people.beneficiaryStatus));
                    }

                    const selectedBenefitRequested= Array.from(document.querySelectorAll('input[name="benefitRequestedFilter"]:checked')).map(check => check.value);
                    if (selectedBenefitRequested.length > 0) {
                        filteredData = filteredData.filter(people => selectedBenefitRequested.includes(people.benefitRequested));
                    }

                    const selectedBenefitReceived = Array.from(document.querySelectorAll('input[name="benefitReceivedFilter"]:checked')).map(check => check.value);
                    if (selectedBenefitReceived.length > 0) {
                        filteredData = filteredData.filter(people => selectedBenefitReceived.includes(people.benefitReceived));
                    }

                    const selectedStatus = Array.from(document.querySelectorAll('input[name="statusFilter"]:checked')).map(check => check.value);
                    if (selectedStatus.length > 0) {
                        filteredData = filteredData.filter(people => selectedStatus.includes(people.status));
                    }
                    
                    getData = filteredData;
                    showInfo();
                }

                resetFiltersButton.addEventListener('click', () => {
                    document.querySelectorAll('input[type="checkbox"], input[type="radio"]').forEach(input => {
                        input.checked = false;
                    });
                    getData = [...originalData];
                    showInfo();
                });

                displayRows(getData, currentPage);
                displayPagination(getData.length);
                addEventListeners();
            });

            /* Exporting to CSV function */
            function downloadCSV(csv, filename) {
                let csvFile;
                let downloadLink;
                csvFile = new Blob([csv], {
                    type: 'text/csv'
                });

                downloadLink = document.createElement('a');
                downloadLink.download = filename;
                downloadLink.href = window.URL.createObjectURL(csvFile);
                downloadLink.style.display = 'none';
                document.body.appendChild(downloadLink);
                downloadLink.click();
            }

            function exportTableToCSV(filename) {
                const rows = document.querySelectorAll('.table-container table tr');
                let csv = [];
                for (let i = 0; i < rows.length; i++) {
                    const row = [],
                        cols = rows[i].querySelectorAll('td, th');
                    for (let j = 0; j < cols.length; j++) {
                        const data = cols[j].innerText.replace(/(\r\n|\n|\r)/gm, '').replace(/(\s\s)/gm, ' ');
                        row.push('"' + data + '"');
                    }
                    csv.push(row.join(','));
                }
                downloadCSV(csv.join('\n'), filename);
            }
            
        </script>


    </div>
</body>
</html>
